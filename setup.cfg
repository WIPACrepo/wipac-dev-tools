[wipac:cicd_setup_builder]
pypi_name = wipac_dev_tools
description = WIPAC Python Development Tools
url = https://github.com/WIPACrepo/wipac-dev-tools
main_or_master = main
python_range = 3.6 - 3.8  # python_requires
keywords_spaced = python tools utilities

[metadata]  # generated by wipac:cicd_setup_builder
name = wipac_dev_tools
version = attr: wipac_dev_tools.__version__
author = WIPAC Developers
author_email = developers@icecube.wisc.edu
description = WIPAC Python Development Tools
long_description = file: README.md, CHANGELOG.md, LICENSE.md
long_description_content_type = text/markdown
keywords =
	python
	tools
	utilities
	WIPAC
	IceCube
license = MIT
classifiers =
	Programming Language :: Python :: 3.6
	Programming Language :: Python :: 3.7
	Programming Language :: Python :: 3.8

[semantic_release]  # generated by wipac:cicd_setup_builder
version_variable = attr: wipac_dev_tools/__init__.py:__version__
upload_to_pypi = True
patch_without_tag = True
commit_parser = semantic_release.history.tag_parser
minor_tag = [minor]
fix_tag = [fix]
branch = main

[options]  # generated by wipac:cicd_setup_builder: 'python_requires', 'packages'
install_requires =
python_requires = >=3.6, <3.9
packages = find:

[options.package_data]  # generated by wipac:cicd_setup_builder: '*'
* = py.typed

[tool:pytest]
flake8-ignore = E501 E231 E226

[flake8]
ignore = E226, E231, E501, W503

[coverage:report]
# regexes for lines to exclude from consideration = None
exclude_lines =
	# Have to re-enable the standard pragma
	pragma: no cover

	# Don't complain about missing debug-only code:
	def __repr__
	if self\.debug

	# Don't complain if tests don't hit defensive assertion code:
	raise AssertionError
	raise NotImplementedError

	# Don't complain if non-runnable code isn't run:
	if 0:
	if __name__ == .__main__.:
omit =
	*__init__*
ignore_errors = True

